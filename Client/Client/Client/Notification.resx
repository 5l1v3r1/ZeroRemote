<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>